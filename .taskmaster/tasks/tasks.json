{
  "master": {
    "tasks": [
      {
        "id": 11,
        "title": "Setup Project Foundation and Dependencies",
        "description": "Initialize the project with required build tools, package manager configuration, and install core dependencies including Tailwind CSS, PostCSS, and autoprefixer",
        "details": "1. Initialize npm/yarn project\n2. Install dependencies:\n```bash\nnpm install -D tailwindcss postcss autoprefixer\nnpm install -D @tailwindcss/forms @tailwindcss/typography\n```\n3. Create project structure:\n```\n/src\n  /styles\n    - index.css\n    - components.css\n  /assets\n/public\n  /images\n    /logos\n```\n4. Initialize Tailwind:\n```bash\nnpx tailwindcss init -p\n```",
        "testStrategy": "Verify all dependencies are installed correctly by checking package.json, ensure Tailwind CLI works, and confirm PostCSS config is generated",
        "priority": "high",
        "dependencies": [],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 12,
        "title": "Configure Tailwind Theme Extensions",
        "description": "Set up the complete Tailwind configuration file with exact color tokens, font families, keyframes, and animations as specified in the PRD",
        "details": "Create tailwind.config.js with exact configuration:\n```js\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    './index.html',\n    './src/**/*.{js,ts,jsx,tsx}',\n  ],\n  theme: {\n    extend: {\n      colors: {\n        primary: { 400: '#d0edf0', 500: '#a7dadb', 600: '#7bc5c7' },\n        secondary: { 400: '#7C69F5', 500: '#4F46E5', 600: '#3730A3' },\n        brand: { accent: '#a7dadb' },\n        success: { 500: '#22c55e', 600: '#16a34a' },\n        warning: { 500: '#f59e0b', 600: '#d97706' },\n        danger: { 500: '#ef4444', 600: '#dc2626' },\n      },\n      fontFamily: {\n        sans: ['Lato', 'ui-sans-serif', 'system-ui', 'sans-serif'],\n        heading: ['Quicksand', 'ui-sans-serif', 'system-ui', 'sans-serif'],\n      },\n      keyframes: {\n        fadeIn: { '0%': { opacity: '0', transform: 'translateY(4px)' }, '100%': { opacity: '1', transform: 'translateY(0)' } },\n        fadeInUp: { '0%': { opacity: '0', transform: 'translateY(12px)' }, '100%': { opacity: '1', transform: 'translateY(0)' } },\n        scaleIn: { '0%': { opacity: '0', transform: 'scale(0.98)' }, '100%': { opacity: '1', transform: 'scale(1)' } },\n        slideIn: { '0%': { opacity: '0', transform: 'translateX(-8px)' }, '100%': { opacity: '1', transform: 'translateX(0)' } },\n        slideInRight: { '0%': { opacity: '0', transform: 'translateX(100%)' }, '100%': { opacity: '1', transform: 'translateX(0)' } },\n        shimmer: { '0%': { backgroundPosition: '-200% 0' }, '100%': { backgroundPosition: '200% 0' } },\n        pulseSubtle: { '0%, 100%': { opacity: '1' }, '50%': { opacity: '0.5' } },\n      },\n      animation: {\n        'fade-in': 'fadeIn 200ms ease-out',\n        'fade-in-up': 'fadeInUp 300ms ease-out',\n        'scale-in': 'scaleIn 220ms cubic-bezier(0.22,1,0.36,1)',\n        'slide-in': 'slideIn 240ms ease-out',\n        'slide-in-right': 'slideInRight 280ms cubic-bezier(0.22,1,0.36,1)',\n        shimmer: 'shimmer 1.8s linear infinite',\n        'pulse-subtle': 'pulseSubtle 2s ease-in-out infinite',\n      },\n    },\n  },\n  plugins: [],\n};\n```",
        "testStrategy": "Run Tailwind build process to ensure configuration is valid, create test HTML with color classes to verify tokens are available, check IntelliSense autocomplete for custom classes",
        "priority": "high",
        "dependencies": [
          11
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 13,
        "title": "Implement CSS Custom Properties and Theme System",
        "description": "Create the CSS variable system for dark and light themes with exact color values, including theme switching mechanism",
        "details": "In src/styles/index.css, implement:\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Dark theme (default) */\n  --bg: 2 12 27;\n  --card: 13 27 42;\n  --text: 224 224 224;\n  --text-muted: 176 197 198;\n  --text-disabled: 122 138 139;\n  --primary: 167 218 219;\n  --primary-light: 208 237 240;\n  --primary-dark: 123 197 199;\n  --secondary: 79 70 229;\n  --secondary-light: 124 105 245;\n  --secondary-dark: 55 48 163;\n  --success: 34 197 94;\n  --warning: 245 158 11;\n  --danger: 239 68 68;\n  accent-color: rgb(var(--primary));\n}\n\n[data-theme='light'] {\n  --bg: 255 255 255;\n  --card: 248 250 252;\n  --text: 30 41 59;\n  --text-muted: 71 85 105;\n  --text-disabled: 148 163 184;\n  --primary: 167 218 219;\n  --primary-light: 208 237 240;\n  --primary-dark: 123 197 199;\n  --secondary: 79 70 229;\n  --secondary-light: 124 105 245;\n  --secondary-dark: 55 48 163;\n  --success: 21 128 61;\n  --warning: 180 83 9;\n  --danger: 185 28 28;\n  accent-color: rgb(var(--primary));\n}\n\n::selection { background-color: rgb(var(--primary) / 0.8); color: rgb(var(--bg)); }\n::-moz-selection { background-color: rgb(var(--primary) / 0.8); color: rgb(var(--bg)); }\n\n[data-theme='light'] ::selection { background-color: rgb(var(--primary) / 0.3); color: rgb(30 41 59); }\n[data-theme='light'] ::-moz-selection { background-color: rgb(var(--primary) / 0.3); color: rgb(30 41 59); }\n```",
        "testStrategy": "Toggle data-theme attribute on HTML element and verify color changes, use browser DevTools to inspect computed CSS variable values, test selection highlighting in both themes",
        "priority": "high",
        "dependencies": [
          12
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 14,
        "title": "Setup Google Fonts Integration",
        "description": "Integrate Google Fonts for Lato and Quicksand with exact weights specified, ensuring proper preconnect for performance",
        "details": "1. Add to HTML head (index.html or equivalent):\n```html\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Lato:wght@400;500;700&family=Quicksand:wght@700&display=swap\" rel=\"stylesheet\">\n```\n2. Verify fonts are loaded by checking Network tab\n3. Create fallback font stack in case of loading failure\n4. Consider adding font-display: swap for better performance:\n```css\n@font-face {\n  font-family: 'Lato';\n  font-display: swap;\n}\n```",
        "testStrategy": "Check Network tab for successful font loading, verify font-family computed styles on body and heading elements, test offline behavior with fallback fonts",
        "priority": "medium",
        "dependencies": [
          13
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 15,
        "title": "Implement Base Layer Styles",
        "description": "Apply base styles for body, headings, and global resets including antialiasing and reduced motion preferences",
        "details": "Add to base layer in index.css:\n```css\n@layer base {\n  html, body, #root { height: 100%; }\n  \n  body { \n    @apply bg-[rgb(var(--bg))] text-[rgb(var(--text))] antialiased font-sans; \n  }\n  \n  h1, h2, h3, h4, h5, h6 { \n    @apply font-heading font-bold; \n  }\n  \n  @media (prefers-reduced-motion: reduce) {\n    *, *::before, *::after { \n      animation: none !important; \n      transition: none !important; \n      scroll-behavior: auto !important; \n    }\n  }\n}\n```\nEnsure proper CSS cascade and specificity",
        "testStrategy": "Inspect body element for correct background and text colors, verify heading elements use Quicksand font, test with prefers-reduced-motion enabled to ensure animations are disabled",
        "priority": "medium",
        "dependencies": [
          14
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 16,
        "title": "Create Core Component Classes",
        "description": "Implement essential component classes including cards, glass effects, inputs, and buttons with exact styling specifications",
        "details": "Add to components layer:\n```css\n@layer components {\n  .card { \n    @apply bg-white/5 backdrop-blur-xl rounded-2xl border border-white/10 shadow-2xl; \n  }\n  \n  .glass-card {\n    position: relative;\n    border-radius: 1rem;\n    background:\n      linear-gradient(rgba(13,27,42,0.55), rgba(13,27,42,0.55)) padding-box,\n      linear-gradient(135deg, rgba(255,255,255,0.22), rgba(255,255,255,0.06)) border-box;\n    border: 1px solid transparent;\n    box-shadow: 0 8px 40px rgba(0,0,0,0.4), inset 0 1px 0 rgba(255,255,255,0.06);\n    -webkit-backdrop-filter: blur(18px);\n    backdrop-filter: blur(18px);\n  }\n  \n  .input { \n    @apply w-full rounded-xl border border-white/10 bg-white/5 px-4 py-3 text-sm text-white placeholder-white/40 outline-none ring-0 focus:ring-[1.2px] focus:ring-primary-400 focus:border-primary-400 transition; \n  }\n  \n  .btn-primary { \n    @apply inline-flex items-center justify-center rounded-xl bg-secondary-500 px-4 py-3 text-sm font-medium text-white hover:bg-secondary-600 active:bg-secondary-600 disabled:opacity-50 disabled:cursor-not-allowed transition; \n  }\n  \n  .btn-ghost { \n    @apply inline-flex items-center justify-center rounded-xl border border-white/10 bg-white/5 hover:bg-white/10 transition; \n  }\n  \n  .tab { \n    @apply relative flex-1 text-center py-2 text-sm font-medium text-primary-500 transition; \n  }\n  .tab-active { \n    @apply text-primary-500; \n  }\n}\n```",
        "testStrategy": "Create sample components using each class, verify glass effect renders with backdrop-filter support, test input focus states and button hover/active/disabled states",
        "priority": "high",
        "dependencies": [
          15
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 17,
        "title": "Implement Micro-interactions and Animation Classes",
        "description": "Create all micro-interaction classes including pressable, elevate, page transitions, skeleton loading, and interactive spotlight effects",
        "details": "Continue in components layer:\n```css\n.pressable { \n  transition: transform 220ms cubic-bezier(0.22,1,0.36,1), filter 220ms ease, background-color 180ms ease; \n  will-change: transform; \n  transform: translateZ(0); \n}\n.pressable:hover { transform: translateY(-2px); }\n.pressable:active { transform: translateY(0) scale(0.98); }\n\n.elevate { \n  box-shadow: 0 6px 24px rgba(0,0,0,0.18), 0 2px 8px rgba(0,0,0,0.12); \n  transition: box-shadow 220ms ease; \n}\n.elevate:hover { \n  box-shadow: 0 10px 30px rgba(0,0,0,0.22), 0 6px 16px rgba(0,0,0,0.16); \n}\n\n.page-enter { animation: fadeInUp 300ms ease-out; }\n.page-leave { animation: fadeOut 220ms ease-in forwards; }\n\n.skeleton { \n  background: linear-gradient(90deg, rgba(255,255,255,0.04) 25%, rgba(255,255,255,0.12) 37%, rgba(255,255,255,0.04) 63%); \n  background-size: 400% 100%; \n  animation: shimmer 1.8s linear infinite; \n}\n\n.animate-delay-75 { animation-delay: 75ms; }\n.animate-delay-150 { animation-delay: 150ms; }\n.animate-delay-300 { animation-delay: 300ms; }\n.animate-delay-500 { animation-delay: 500ms; }\n\n.interactive-spotlight { \n  position: absolute; \n  inset: -1px; \n  pointer-events: none; \n  background: radial-gradient(240px 240px at var(--x, 50%) var(--y, 50%), rgba(255,255,255,0.08), rgba(255,255,255,0.02) 40%, transparent 70%); \n  opacity: 0; \n  transition: opacity 200ms ease; \n}\n.group:hover > .interactive-spotlight { opacity: 1; }\n```",
        "testStrategy": "Test each interaction class with mouse events, verify animation timings match specifications, ensure spotlight effect follows cursor position via CSS variables",
        "priority": "medium",
        "dependencies": [
          16
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 18,
        "title": "Implement Advanced Visual Effects and Patterns",
        "description": "Create swirl pattern, logo glow, profile card animations, and other advanced visual effects including staggered animations",
        "details": "Add remaining component classes:\n```css\n.swirl-item { \n  transition: transform 420ms cubic-bezier(0.22,1,0.36,1), filter 420ms ease; \n  transform: var(--t); \n  filter: saturate(1) drop-shadow(0 0 10px rgba(var(--primary), 0.12)) drop-shadow(0 0 26px rgba(var(--primary), 0.08)); \n  will-change: transform; \n  pointer-events: none; \n}\n\n.logo-glow { \n  filter: drop-shadow(0 0 0 rgba(var(--primary), 0)); \n  transition: filter 360ms ease; \n}\n.logo-glow:hover { \n  filter: drop-shadow(0 0 14px rgba(var(--primary), 0.45)); \n}\n\n.swirl-pattern { \n  position: absolute; \n  inset: 0; \n  background-image: url('/images/logos/logo-swirl.png'); \n  background-repeat: repeat; \n  background-size: 64px 64px; \n  opacity: 0.07; \n  pointer-events: none; \n}\n\n.profile-card-hover { \n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1); \n}\n.profile-card-hover:hover { \n  transform: translateY(-4px); \n  box-shadow: 0 32px 64px rgba(0, 0, 0, 0.4); \n}\n\n.avatar-glow { animation: avatarGlow 3s ease-in-out infinite alternate; }\n.status-pulse { animation: statusPulse 2s ease-in-out infinite; }\n.float-button { animation: floatButton 3s ease-in-out infinite; }\n\n.stagger-in { \n  opacity: 0; \n  transform: translateY(20px); \n  animation: staggerIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards; \n}\n.stagger-in:nth-child(1) { animation-delay: 0.1s; }\n.stagger-in:nth-child(2) { animation-delay: 0.2s; }\n.stagger-in:nth-child(3) { animation-delay: 0.3s; }\n.stagger-in:nth-child(4) { animation-delay: 0.4s; }\n.stagger-in:nth-child(5) { animation-delay: 0.5s; }\n.stagger-in:nth-child(6) { animation-delay: 0.6s; }\n\n.copy-success { animation: copySuccess 0.6s ease-out; }\n\n.gradient-text-animated {\n  background: linear-gradient(-45deg, #ffffff, #a7dadb, #7bc5c7, #4F46E5);\n  background-size: 400% 400%;\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: gradientShift 4s ease-in-out infinite;\n}\n```",
        "testStrategy": "Verify swirl pattern loads correctly from asset path, test staggered animations with multiple elements, ensure gradient text animation is smooth across browsers",
        "priority": "medium",
        "dependencies": [
          17
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 19,
        "title": "Define Keyframe Animations",
        "description": "Implement all keyframe definitions for animations including fadeInUp, avatarGlow, statusPulse, and other custom animations",
        "details": "Add to utilities layer:\n```css\n@layer utilities {\n  @keyframes fadeInUp { \n    from { opacity: 0; transform: translateY(30px); } \n    to { opacity: 1; transform: translateY(0); } \n  }\n  \n  @keyframes fadeOut { \n    from { opacity: 1; transform: translateY(0); } \n    to { opacity: 0; transform: translateY(12px); } \n  }\n  \n  @keyframes avatarGlow {\n    0% { box-shadow: 0 0 20px rgba(167, 218, 219, 0.3); }\n    100% { box-shadow: 0 0 40px rgba(167, 218, 219, 0.6), 0 0 80px rgba(79, 70, 229, 0.2); }\n  }\n  \n  @keyframes statusPulse {\n    0%, 100% { transform: scale(1); box-shadow: 0 0 8px rgba(34, 197, 94, 0.4); }\n    50% { transform: scale(1.1); box-shadow: 0 0 16px rgba(34, 197, 94, 0.8); }\n  }\n  \n  @keyframes floatButton { \n    0%, 100% { transform: translateY(0) translateX(-50%); } \n    50% { transform: translateY(-6px) translateX(-50%); } \n  }\n  \n  @keyframes staggerIn { \n    to { opacity: 1; transform: translateY(0); } \n  }\n  \n  @keyframes copySuccess {\n    0% { transform: scale(1); color: rgba(255, 255, 255, 0.5); }\n    50% { transform: scale(1.2); color: rgba(34, 197, 94, 1); }\n    100% { transform: scale(1); color: rgba(255, 255, 255, 0.5); }\n  }\n  \n  @keyframes gradientShift { \n    0% { background-position: 0% 50%; } \n    50% { background-position: 100% 50%; } \n    100% { background-position: 0% 50%; } \n  }\n  \n  @keyframes shimmer { \n    0% { background-position: 200% 0; } \n    100% { background-position: -200% 0; } \n  }\n}\n```",
        "testStrategy": "Test each animation individually by applying to test elements, verify timing and easing curves match specifications, ensure animations loop correctly where specified",
        "priority": "medium",
        "dependencies": [
          18
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 20,
        "title": "Setup Assets and Validate Complete Implementation",
        "description": "Add required assets, perform comprehensive testing of all styles, and ensure pixel-perfect match with original SmartSlate app",
        "details": "1. Add logo-swirl.png to /public/images/logos/\n2. Create test page with all component examples:\n```html\n<!-- Test all components -->\n<div class=\"card\">Card Component</div>\n<div class=\"glass-card\">Glass Card</div>\n<input class=\"input\" placeholder=\"Test input\">\n<button class=\"btn-primary\">Primary Button</button>\n<button class=\"btn-ghost\">Ghost Button</button>\n<div class=\"skeleton\">Loading...</div>\n<div class=\"stagger-in\">Stagger Item 1</div>\n<div class=\"stagger-in\">Stagger Item 2</div>\n<h1 class=\"gradient-text-animated\">Gradient Text</h1>\n```\n3. Test theme switching:\n```js\n// Theme toggle function\nfunction toggleTheme() {\n  const html = document.documentElement;\n  const currentTheme = html.getAttribute('data-theme');\n  html.setAttribute('data-theme', currentTheme === 'light' ? '' : 'light');\n}\n```\n4. Validate:\n- All colors match hex values\n- Fonts load correctly\n- Animations perform as specified\n- Glass effects work with backdrop-filter\n- Theme switching is smooth\n- Accessibility contrast ratios meet WCAG AA",
        "testStrategy": "Visual regression testing against original SmartSlate app, automated contrast ratio testing, cross-browser compatibility check (Chrome, Firefox, Safari), performance audit for animation smoothness",
        "priority": "high",
        "dependencies": [
          19
        ],
        "status": "pending",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-09-27T10:54:14.464Z",
      "updated": "2025-09-28T13:14:42.423Z",
      "description": "Tasks for master context"
    }
  }
}